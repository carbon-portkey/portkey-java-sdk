// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acs12.proto

package acs12;

public final class Acs12 {
  private Acs12() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface UserContractMethodFeesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:acs12.UserContractMethodFees)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    java.util.List<acs12.Acs12.UserContractMethodFee> 
        getFeesList();
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    acs12.Acs12.UserContractMethodFee getFees(int index);
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    int getFeesCount();
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    java.util.List<? extends acs12.Acs12.UserContractMethodFeeOrBuilder> 
        getFeesOrBuilderList();
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    acs12.Acs12.UserContractMethodFeeOrBuilder getFeesOrBuilder(
        int index);

    /**
     * <pre>
     * Optional based on the implementation of SetConfiguration method.
     * </pre>
     *
     * <code>bool is_size_fee_free = 3;</code>
     * @return The isSizeFeeFree.
     */
    boolean getIsSizeFeeFree();
  }
  /**
   * <pre>
   *Specified method fee for user contract.
   * </pre>
   *
   * Protobuf type {@code acs12.UserContractMethodFees}
   */
  public  static final class UserContractMethodFees extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:acs12.UserContractMethodFees)
      UserContractMethodFeesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserContractMethodFees.newBuilder() to construct.
    private UserContractMethodFees(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserContractMethodFees() {
      fees_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserContractMethodFees();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserContractMethodFees(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fees_ = new java.util.ArrayList<acs12.Acs12.UserContractMethodFee>();
                mutable_bitField0_ |= 0x00000001;
              }
              fees_.add(
                  input.readMessage(acs12.Acs12.UserContractMethodFee.parser(), extensionRegistry));
              break;
            }
            case 24: {

              isSizeFeeFree_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fees_ = java.util.Collections.unmodifiableList(fees_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return acs12.Acs12.internal_static_acs12_UserContractMethodFees_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return acs12.Acs12.internal_static_acs12_UserContractMethodFees_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              acs12.Acs12.UserContractMethodFees.class, acs12.Acs12.UserContractMethodFees.Builder.class);
    }

    public static final int FEES_FIELD_NUMBER = 2;
    private java.util.List<acs12.Acs12.UserContractMethodFee> fees_;
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    public java.util.List<acs12.Acs12.UserContractMethodFee> getFeesList() {
      return fees_;
    }
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    public java.util.List<? extends acs12.Acs12.UserContractMethodFeeOrBuilder> 
        getFeesOrBuilderList() {
      return fees_;
    }
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    public int getFeesCount() {
      return fees_.size();
    }
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    public acs12.Acs12.UserContractMethodFee getFees(int index) {
      return fees_.get(index);
    }
    /**
     * <pre>
     * List of fees to be charged.
     * </pre>
     *
     * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
     */
    public acs12.Acs12.UserContractMethodFeeOrBuilder getFeesOrBuilder(
        int index) {
      return fees_.get(index);
    }

    public static final int IS_SIZE_FEE_FREE_FIELD_NUMBER = 3;
    private boolean isSizeFeeFree_;
    /**
     * <pre>
     * Optional based on the implementation of SetConfiguration method.
     * </pre>
     *
     * <code>bool is_size_fee_free = 3;</code>
     * @return The isSizeFeeFree.
     */
    public boolean getIsSizeFeeFree() {
      return isSizeFeeFree_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fees_.size(); i++) {
        output.writeMessage(2, fees_.get(i));
      }
      if (isSizeFeeFree_ != false) {
        output.writeBool(3, isSizeFeeFree_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, fees_.get(i));
      }
      if (isSizeFeeFree_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSizeFeeFree_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof acs12.Acs12.UserContractMethodFees)) {
        return super.equals(obj);
      }
      acs12.Acs12.UserContractMethodFees other = (acs12.Acs12.UserContractMethodFees) obj;

      if (!getFeesList()
          .equals(other.getFeesList())) return false;
      if (getIsSizeFeeFree()
          != other.getIsSizeFeeFree()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFeesCount() > 0) {
        hash = (37 * hash) + FEES_FIELD_NUMBER;
        hash = (53 * hash) + getFeesList().hashCode();
      }
      hash = (37 * hash) + IS_SIZE_FEE_FREE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSizeFeeFree());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static acs12.Acs12.UserContractMethodFees parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFees parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFees parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFees parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(acs12.Acs12.UserContractMethodFees prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Specified method fee for user contract.
     * </pre>
     *
     * Protobuf type {@code acs12.UserContractMethodFees}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:acs12.UserContractMethodFees)
        acs12.Acs12.UserContractMethodFeesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFees_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFees_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                acs12.Acs12.UserContractMethodFees.class, acs12.Acs12.UserContractMethodFees.Builder.class);
      }

      // Construct using acs12.Acs12.UserContractMethodFees.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFeesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (feesBuilder_ == null) {
          fees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          feesBuilder_.clear();
        }
        isSizeFeeFree_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFees_descriptor;
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFees getDefaultInstanceForType() {
        return acs12.Acs12.UserContractMethodFees.getDefaultInstance();
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFees build() {
        acs12.Acs12.UserContractMethodFees result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFees buildPartial() {
        acs12.Acs12.UserContractMethodFees result = new acs12.Acs12.UserContractMethodFees(this);
        int from_bitField0_ = bitField0_;
        if (feesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fees_ = java.util.Collections.unmodifiableList(fees_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fees_ = fees_;
        } else {
          result.fees_ = feesBuilder_.build();
        }
        result.isSizeFeeFree_ = isSizeFeeFree_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof acs12.Acs12.UserContractMethodFees) {
          return mergeFrom((acs12.Acs12.UserContractMethodFees)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(acs12.Acs12.UserContractMethodFees other) {
        if (other == acs12.Acs12.UserContractMethodFees.getDefaultInstance()) return this;
        if (feesBuilder_ == null) {
          if (!other.fees_.isEmpty()) {
            if (fees_.isEmpty()) {
              fees_ = other.fees_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFeesIsMutable();
              fees_.addAll(other.fees_);
            }
            onChanged();
          }
        } else {
          if (!other.fees_.isEmpty()) {
            if (feesBuilder_.isEmpty()) {
              feesBuilder_.dispose();
              feesBuilder_ = null;
              fees_ = other.fees_;
              bitField0_ = (bitField0_ & ~0x00000001);
              feesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFeesFieldBuilder() : null;
            } else {
              feesBuilder_.addAllMessages(other.fees_);
            }
          }
        }
        if (other.getIsSizeFeeFree() != false) {
          setIsSizeFeeFree(other.getIsSizeFeeFree());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        acs12.Acs12.UserContractMethodFees parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (acs12.Acs12.UserContractMethodFees) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<acs12.Acs12.UserContractMethodFee> fees_ =
        java.util.Collections.emptyList();
      private void ensureFeesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fees_ = new java.util.ArrayList<acs12.Acs12.UserContractMethodFee>(fees_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          acs12.Acs12.UserContractMethodFee, acs12.Acs12.UserContractMethodFee.Builder, acs12.Acs12.UserContractMethodFeeOrBuilder> feesBuilder_;

      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public java.util.List<acs12.Acs12.UserContractMethodFee> getFeesList() {
        if (feesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fees_);
        } else {
          return feesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public int getFeesCount() {
        if (feesBuilder_ == null) {
          return fees_.size();
        } else {
          return feesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public acs12.Acs12.UserContractMethodFee getFees(int index) {
        if (feesBuilder_ == null) {
          return fees_.get(index);
        } else {
          return feesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder setFees(
          int index, acs12.Acs12.UserContractMethodFee value) {
        if (feesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeesIsMutable();
          fees_.set(index, value);
          onChanged();
        } else {
          feesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder setFees(
          int index, acs12.Acs12.UserContractMethodFee.Builder builderForValue) {
        if (feesBuilder_ == null) {
          ensureFeesIsMutable();
          fees_.set(index, builderForValue.build());
          onChanged();
        } else {
          feesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder addFees(acs12.Acs12.UserContractMethodFee value) {
        if (feesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeesIsMutable();
          fees_.add(value);
          onChanged();
        } else {
          feesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder addFees(
          int index, acs12.Acs12.UserContractMethodFee value) {
        if (feesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFeesIsMutable();
          fees_.add(index, value);
          onChanged();
        } else {
          feesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder addFees(
          acs12.Acs12.UserContractMethodFee.Builder builderForValue) {
        if (feesBuilder_ == null) {
          ensureFeesIsMutable();
          fees_.add(builderForValue.build());
          onChanged();
        } else {
          feesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder addFees(
          int index, acs12.Acs12.UserContractMethodFee.Builder builderForValue) {
        if (feesBuilder_ == null) {
          ensureFeesIsMutable();
          fees_.add(index, builderForValue.build());
          onChanged();
        } else {
          feesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder addAllFees(
          java.lang.Iterable<? extends acs12.Acs12.UserContractMethodFee> values) {
        if (feesBuilder_ == null) {
          ensureFeesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fees_);
          onChanged();
        } else {
          feesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder clearFees() {
        if (feesBuilder_ == null) {
          fees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          feesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public Builder removeFees(int index) {
        if (feesBuilder_ == null) {
          ensureFeesIsMutable();
          fees_.remove(index);
          onChanged();
        } else {
          feesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public acs12.Acs12.UserContractMethodFee.Builder getFeesBuilder(
          int index) {
        return getFeesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public acs12.Acs12.UserContractMethodFeeOrBuilder getFeesOrBuilder(
          int index) {
        if (feesBuilder_ == null) {
          return fees_.get(index);  } else {
          return feesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public java.util.List<? extends acs12.Acs12.UserContractMethodFeeOrBuilder> 
           getFeesOrBuilderList() {
        if (feesBuilder_ != null) {
          return feesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fees_);
        }
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public acs12.Acs12.UserContractMethodFee.Builder addFeesBuilder() {
        return getFeesFieldBuilder().addBuilder(
            acs12.Acs12.UserContractMethodFee.getDefaultInstance());
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public acs12.Acs12.UserContractMethodFee.Builder addFeesBuilder(
          int index) {
        return getFeesFieldBuilder().addBuilder(
            index, acs12.Acs12.UserContractMethodFee.getDefaultInstance());
      }
      /**
       * <pre>
       * List of fees to be charged.
       * </pre>
       *
       * <code>repeated .acs12.UserContractMethodFee fees = 2;</code>
       */
      public java.util.List<acs12.Acs12.UserContractMethodFee.Builder> 
           getFeesBuilderList() {
        return getFeesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          acs12.Acs12.UserContractMethodFee, acs12.Acs12.UserContractMethodFee.Builder, acs12.Acs12.UserContractMethodFeeOrBuilder> 
          getFeesFieldBuilder() {
        if (feesBuilder_ == null) {
          feesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              acs12.Acs12.UserContractMethodFee, acs12.Acs12.UserContractMethodFee.Builder, acs12.Acs12.UserContractMethodFeeOrBuilder>(
                  fees_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fees_ = null;
        }
        return feesBuilder_;
      }

      private boolean isSizeFeeFree_ ;
      /**
       * <pre>
       * Optional based on the implementation of SetConfiguration method.
       * </pre>
       *
       * <code>bool is_size_fee_free = 3;</code>
       * @return The isSizeFeeFree.
       */
      public boolean getIsSizeFeeFree() {
        return isSizeFeeFree_;
      }
      /**
       * <pre>
       * Optional based on the implementation of SetConfiguration method.
       * </pre>
       *
       * <code>bool is_size_fee_free = 3;</code>
       * @param value The isSizeFeeFree to set.
       * @return This builder for chaining.
       */
      public Builder setIsSizeFeeFree(boolean value) {
        
        isSizeFeeFree_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional based on the implementation of SetConfiguration method.
       * </pre>
       *
       * <code>bool is_size_fee_free = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSizeFeeFree() {
        
        isSizeFeeFree_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:acs12.UserContractMethodFees)
    }

    // @@protoc_insertion_point(class_scope:acs12.UserContractMethodFees)
    private static final acs12.Acs12.UserContractMethodFees DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new acs12.Acs12.UserContractMethodFees();
    }

    public static acs12.Acs12.UserContractMethodFees getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserContractMethodFees>
        PARSER = new com.google.protobuf.AbstractParser<UserContractMethodFees>() {
      @java.lang.Override
      public UserContractMethodFees parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserContractMethodFees(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserContractMethodFees> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserContractMethodFees> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public acs12.Acs12.UserContractMethodFees getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserContractMethodFeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:acs12.UserContractMethodFee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The token symbol of the method fee.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     * The token symbol of the method fee.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     * The amount of fees to be charged.
     * </pre>
     *
     * <code>int64 basic_fee = 2;</code>
     * @return The basicFee.
     */
    long getBasicFee();
  }
  /**
   * Protobuf type {@code acs12.UserContractMethodFee}
   */
  public  static final class UserContractMethodFee extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:acs12.UserContractMethodFee)
      UserContractMethodFeeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserContractMethodFee.newBuilder() to construct.
    private UserContractMethodFee(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserContractMethodFee() {
      symbol_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserContractMethodFee();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserContractMethodFee(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 16: {

              basicFee_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return acs12.Acs12.internal_static_acs12_UserContractMethodFee_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return acs12.Acs12.internal_static_acs12_UserContractMethodFee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              acs12.Acs12.UserContractMethodFee.class, acs12.Acs12.UserContractMethodFee.Builder.class);
    }

    public static final int SYMBOL_FIELD_NUMBER = 1;
    private volatile java.lang.Object symbol_;
    /**
     * <pre>
     * The token symbol of the method fee.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The symbol.
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The token symbol of the method fee.
     * </pre>
     *
     * <code>string symbol = 1;</code>
     * @return The bytes for symbol.
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASIC_FEE_FIELD_NUMBER = 2;
    private long basicFee_;
    /**
     * <pre>
     * The amount of fees to be charged.
     * </pre>
     *
     * <code>int64 basic_fee = 2;</code>
     * @return The basicFee.
     */
    public long getBasicFee() {
      return basicFee_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, symbol_);
      }
      if (basicFee_ != 0L) {
        output.writeInt64(2, basicFee_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, symbol_);
      }
      if (basicFee_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, basicFee_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof acs12.Acs12.UserContractMethodFee)) {
        return super.equals(obj);
      }
      acs12.Acs12.UserContractMethodFee other = (acs12.Acs12.UserContractMethodFee) obj;

      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (getBasicFee()
          != other.getBasicFee()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + BASIC_FEE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBasicFee());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static acs12.Acs12.UserContractMethodFee parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static acs12.Acs12.UserContractMethodFee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(acs12.Acs12.UserContractMethodFee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code acs12.UserContractMethodFee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:acs12.UserContractMethodFee)
        acs12.Acs12.UserContractMethodFeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFee_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                acs12.Acs12.UserContractMethodFee.class, acs12.Acs12.UserContractMethodFee.Builder.class);
      }

      // Construct using acs12.Acs12.UserContractMethodFee.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        symbol_ = "";

        basicFee_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return acs12.Acs12.internal_static_acs12_UserContractMethodFee_descriptor;
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFee getDefaultInstanceForType() {
        return acs12.Acs12.UserContractMethodFee.getDefaultInstance();
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFee build() {
        acs12.Acs12.UserContractMethodFee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public acs12.Acs12.UserContractMethodFee buildPartial() {
        acs12.Acs12.UserContractMethodFee result = new acs12.Acs12.UserContractMethodFee(this);
        result.symbol_ = symbol_;
        result.basicFee_ = basicFee_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof acs12.Acs12.UserContractMethodFee) {
          return mergeFrom((acs12.Acs12.UserContractMethodFee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(acs12.Acs12.UserContractMethodFee other) {
        if (other == acs12.Acs12.UserContractMethodFee.getDefaultInstance()) return this;
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.getBasicFee() != 0L) {
          setBasicFee(other.getBasicFee());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        acs12.Acs12.UserContractMethodFee parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (acs12.Acs12.UserContractMethodFee) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <pre>
       * The token symbol of the method fee.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The token symbol of the method fee.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The token symbol of the method fee.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol of the method fee.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The token symbol of the method fee.
       * </pre>
       *
       * <code>string symbol = 1;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private long basicFee_ ;
      /**
       * <pre>
       * The amount of fees to be charged.
       * </pre>
       *
       * <code>int64 basic_fee = 2;</code>
       * @return The basicFee.
       */
      public long getBasicFee() {
        return basicFee_;
      }
      /**
       * <pre>
       * The amount of fees to be charged.
       * </pre>
       *
       * <code>int64 basic_fee = 2;</code>
       * @param value The basicFee to set.
       * @return This builder for chaining.
       */
      public Builder setBasicFee(long value) {
        
        basicFee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The amount of fees to be charged.
       * </pre>
       *
       * <code>int64 basic_fee = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicFee() {
        
        basicFee_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:acs12.UserContractMethodFee)
    }

    // @@protoc_insertion_point(class_scope:acs12.UserContractMethodFee)
    private static final acs12.Acs12.UserContractMethodFee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new acs12.Acs12.UserContractMethodFee();
    }

    public static acs12.Acs12.UserContractMethodFee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UserContractMethodFee>
        PARSER = new com.google.protobuf.AbstractParser<UserContractMethodFee>() {
      @java.lang.Override
      public UserContractMethodFee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserContractMethodFee(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserContractMethodFee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserContractMethodFee> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public acs12.Acs12.UserContractMethodFee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_acs12_UserContractMethodFees_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_acs12_UserContractMethodFees_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_acs12_UserContractMethodFee_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_acs12_UserContractMethodFee_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013acs12.proto\022\005acs12\032\022aelf/options.proto" +
      "\032\033google/protobuf/empty.proto\032\036google/pr" +
      "otobuf/wrappers.proto\032\017aelf/core.proto\"^" +
      "\n\026UserContractMethodFees\022*\n\004fees\030\002 \003(\0132\034" +
      ".acs12.UserContractMethodFee\022\030\n\020is_size_" +
      "fee_free\030\003 \001(\010\":\n\025UserContractMethodFee\022" +
      "\016\n\006symbol\030\001 \001(\t\022\021\n\tbasic_fee\030\002 \001(\0032\016\n\014Us" +
      "erContractB!\252\002\024AElf.Standards.ACS12\212\222\364\001\005" +
      "acs12P\000P\001P\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          aelf.Options.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          aelf.Core.getDescriptor(),
        });
    internal_static_acs12_UserContractMethodFees_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_acs12_UserContractMethodFees_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_acs12_UserContractMethodFees_descriptor,
        new java.lang.String[] { "Fees", "IsSizeFeeFree", });
    internal_static_acs12_UserContractMethodFee_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_acs12_UserContractMethodFee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_acs12_UserContractMethodFee_descriptor,
        new java.lang.String[] { "Symbol", "BasicFee", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(aelf.Options.identity);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    aelf.Options.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    aelf.Core.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
